[{"C:\\Web\\Gaesipang_test\\Front\\src\\index.js":"1","C:\\Web\\Gaesipang_test\\Front\\src\\router\\Router.js":"2","C:\\Web\\Gaesipang_test\\Front\\src\\page\\bottom.jsx":"3","C:\\Web\\Gaesipang_test\\Front\\src\\key\\key.js":"4","C:\\Web\\Gaesipang_test\\Front\\src\\page\\content_view.jsx":"5","C:\\Web\\Gaesipang_test\\Front\\src\\page\\notfound.jsx":"6","C:\\Web\\Gaesipang_test\\Front\\src\\page\\main.jsx":"7","C:\\Web\\Gaesipang_test\\Front\\src\\page\\header.jsx":"8","C:\\Web\\Gaesipang_test\\Front\\src\\page\\write.jsx":"9","C:\\Web\\Gaesipang_test\\Front\\src\\App.js":"10","C:\\Web\\Gaesipang_test\\Front\\src\\page\\login.jsx":"11","C:\\Web\\Gaesipang_test\\Front\\src\\page\\base.jsx":"12","C:\\Web\\Gaesipang_test\\Front\\src\\service\\chkcookie.js":"13","C:\\Web\\Gaesipang_test\\Front\\src\\page\\logout.jsx":"14","C:\\Web\\Gaesipang_test\\Front\\src\\page\\register.jsx":"15","C:\\Web\\Gaesipang_test\\Front\\src\\page\\needlogin.jsx":"16","C:\\Web\\Gaesipang_test\\Front\\src\\page\\chkpasswd.jsx":"17","C:\\Web\\Gaesipang_test\\Front\\src\\reportWebVitals.js":"18","C:\\Web\\Gaesipang_test\\Front\\src\\page\\board_modify.jsx":"19","C:\\Web\\Gaesipang_test\\Front\\src\\style\\styled.js":"20","C:\\Web\\Gaesipang_test\\Front\\src\\page\\board.jsx":"21","C:\\Web\\Gaesipang_test\\Front\\src\\page\\modifyinfo.jsx":"22"},{"size":563,"mtime":1609498730568,"results":"23","hashOfConfig":"24"},{"size":1621,"mtime":1610677273954,"results":"25","hashOfConfig":"24"},{"size":609,"mtime":1610676497581,"results":"26","hashOfConfig":"24"},{"size":990,"mtime":1610966982490,"results":"27","hashOfConfig":"24"},{"size":4642,"mtime":1610677490776,"results":"28","hashOfConfig":"24"},{"size":957,"mtime":1610633873431,"results":"29","hashOfConfig":"24"},{"size":1957,"mtime":1610677496480,"results":"30","hashOfConfig":"24"},{"size":2390,"mtime":1610677411913,"results":"31","hashOfConfig":"24"},{"size":3595,"mtime":1610677502053,"results":"32","hashOfConfig":"24"},{"size":136,"mtime":1610678056504,"results":"33","hashOfConfig":"24"},{"size":3687,"mtime":1610634051824,"results":"34","hashOfConfig":"24"},{"size":471,"mtime":1610631837435,"results":"35","hashOfConfig":"24"},{"size":896,"mtime":1610634917218,"results":"36","hashOfConfig":"24"},{"size":351,"mtime":1610627147188,"results":"37","hashOfConfig":"24"},{"size":6558,"mtime":1610970368601,"results":"38","hashOfConfig":"24"},{"size":650,"mtime":1610633717718,"results":"39","hashOfConfig":"24"},{"size":3519,"mtime":1610632851233,"results":"40","hashOfConfig":"24"},{"size":362,"mtime":1607482154347,"results":"41","hashOfConfig":"24"},{"size":4268,"mtime":1610677471993,"results":"42","hashOfConfig":"24"},{"size":2612,"mtime":1610677548488,"results":"43","hashOfConfig":"24"},{"size":4256,"mtime":1610677483353,"results":"44","hashOfConfig":"24"},{"size":8188,"mtime":1610677242949,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1rkd84b",{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":3,"source":"99","usedDeprecatedRules":"48"},"C:\\Web\\Gaesipang_test\\Front\\src\\index.js",[],["100","101"],"C:\\Web\\Gaesipang_test\\Front\\src\\router\\Router.js",["102","103","104","105"],"import { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Main from '../page/main';\r\nimport Board from '../page/board';\r\nimport modify_info from '../page/modifyinfo';\r\nimport Login from '../page/login';\r\nimport Logout from '../page/logout';\r\nimport Chkpasswd from '../page/chkpasswd';\r\nimport Headerfile from '../page/header';\r\nimport Bottomfile from '../page/bottom';\r\nimport \"../css/router_css.css\";\r\nimport Write from '../page/write';\r\nimport { CookiesProvider } from 'react-cookie';\r\nimport styled from 'styled-components';\r\nimport Content_View from '../page/content_view';\r\nimport Notfound from '../page/notfound';\r\nimport Register from '../page/register';\r\nimport BoardModify from '../page/board_modify';\r\n\r\n\r\n\r\n\r\nexport default function Router(){\r\n    return(\r\n        <BrowserRouter>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Main}/>\r\n                    <Route path=\"/board\" component={Board}/>\r\n                    <Route path=\"/modify_info\" component={modify_info}/>\r\n                    <Route path=\"/login\" component={Login}/>\r\n                    <Route path=\"/logout\" component={Logout}/>\r\n                    <Route path=\"/write\" component={Write}/>\r\n                    <Route path=\"/register\" component={Register}/>\r\n                    <Route path=\"/chkpasswd\" component={Chkpasswd}/>\r\n                    <Route path=\"/modify\" component={BoardModify}/>\r\n                    <Route path=\"/view/:seq\" component={Content_View}/>\r\n                    <Route path=\"*\" component={Notfound}/>\r\n                </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}","C:\\Web\\Gaesipang_test\\Front\\src\\page\\bottom.jsx",[],"C:\\Web\\Gaesipang_test\\Front\\src\\key\\key.js",[],"C:\\Web\\Gaesipang_test\\Front\\src\\page\\content_view.jsx",["106","107","108","109","110"],"import React from 'react'\r\nimport Axios from 'axios'\r\nimport { PageHeader, Descriptions, Button, Card, Tooltip } from 'antd'\r\nimport { EditOutlined, DeleteOutlined, UnorderedListOutlined } from '@ant-design/icons';\r\nimport \"../css/write_css.css\";\r\nimport Mainbase from '../page/base';\r\nimport Chkcookie from '../service/chkcookie';\r\nimport \"../css/modify.css\";\r\nimport {Board_URL as boardurl, Delete_URL as delurl,BOARD,MODIFY} from '../key/key';\r\nimport {Board_title} from '../style/styled';\r\n\r\nexport default class First extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            params : this.props.match.params,\r\n            board : {\r\n                content : \"\",\r\n            },\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(Chkcookie.islogin){\r\n            Axios.get(boardurl+this.state.params.seq,{\r\n                headers : {\r\n                    'Authorization' : Chkcookie.gettoken(),\r\n                }\r\n            }).then(v => {\r\n                this.setState({board : v.data.base});\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    delete = () => {\r\n        const res = window.confirm(\"삭제하시겠습니까?\");\r\n        if(res){\r\n            Axios.post(delurl,{\r\n                \"seq\" : this.state.params.seq,\r\n                \"author\" : this.state.board.author,\r\n            },{ headers : { \"Authorization\" : Chkcookie.gettoken(),}})\r\n            .then( v => {\r\n                alert(\"삭제가 완료되었습니다.\");\r\n                this.props.history.push(BOARD);\r\n                window.location.reload();\r\n            })\r\n        }\r\n    }\r\n\r\n    modify(){\r\n        this.props.history.push({\r\n            pathname : MODIFY,\r\n            state : { isValid : true, board : this.state.board}\r\n        });\r\n    }\r\n\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <Mainbase>\r\n            <PageHeader\r\n                className=\"page\"\r\n                ghost={false}\r\n                title={\r\n                    <Board_title level={3}>게시글 보기</Board_title>\r\n                }\r\n                style={{\r\n                    display:'flex',flexDirection:'column',\r\n                    paddingTop:\"8%\",\r\n                    height:'100vh',\r\n                    paddingLeft:'3%',\r\n                    paddingRight:'3%',\r\n                    color:\"white\",\r\n                    backgroundColor:\"#001529\",\r\n                }}\r\n            >\r\n                <Card title={\r\n                    <Descriptions bordered layout=\"horizontal\">\r\n                        <Descriptions.Item label=\"제목\" labelStyle={{width:\"5%\", backgroundColor:\"#A4A4A4\"}}>{this.state.board.title}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"조회수\" labelStyle={{width:\"5%\", backgroundColor:\"#A4A4A4\"}} contentStyle={{width:\"10%\",textAlign:\"center\"}}>{this.state.board.readcount}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"작성자\" labelStyle={{width:\"5%\", backgroundColor:\"#A4A4A4\"}} contentStyle={{width:\"15%\",textAlign:\"center\"}}>{this.state.board.author}</Descriptions.Item>\r\n                    </Descriptions>\r\n                }\r\n                 bordered={false} style={{width:\"100%\"}}\r\n                actions={[\r\n\r\n                    <Tooltip title={this.state.board.author == Chkcookie.getuser() ? \"\" : \"본인의 글 외에는 수정할 수 없습니다!\"}>\r\n                        <Button type=\"link\" disabled={this.state.board.author == Chkcookie.getuser() ? false : true} \r\n                        style={{color:\"#919090\"}} icon={<EditOutlined/>} onClick={() => this.modify()}>\r\n                        </Button>\r\n                    </Tooltip>,\r\n                    \r\n                    <Tooltip title={this.state.board.author == Chkcookie.getuser() ? \"\" : \"본인의 글 외에는 삭제할 수 없습니다!\"}>\r\n                        <Button type=\"link\" disabled={this.state.board.author == Chkcookie.getuser() ? false : true} \r\n                        style={{color:\"#919090\"}} icon={<DeleteOutlined/>} onClick={() => this.delete()}>\r\n                        </Button>\r\n                    </Tooltip>\r\n                    ,\r\n\r\n                    <Button type=\"link\"\r\n                    style={{color:\"#919090\",width:\"100%\"}} icon={<UnorderedListOutlined/>} onClick={() => this.props.history.push(BOARD)}>\r\n                    </Button>\r\n                  ]}\r\n                >\r\n                    {this.state.board.content.split(\"\\n\").map((v,i) => {return (<p key={i}>{v}</p>)})}\r\n                </Card>\r\n            </PageHeader>\r\n            </Mainbase>\r\n        )\r\n    }\r\n}",["111","112"],"C:\\Web\\Gaesipang_test\\Front\\src\\page\\notfound.jsx",[],"C:\\Web\\Gaesipang_test\\Front\\src\\page\\main.jsx",[],"C:\\Web\\Gaesipang_test\\Front\\src\\page\\header.jsx",[],"C:\\Web\\Gaesipang_test\\Front\\src\\page\\write.jsx",["113","114","115"],"C:\\Web\\Gaesipang_test\\Front\\src\\App.js",[],"C:\\Web\\Gaesipang_test\\Front\\src\\page\\login.jsx",["116"],"import React from 'react';\r\nimport Axios from 'axios';\r\nimport { Link } from 'react-router-dom'\r\nimport { Layout, Form,Input,Button } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport Mainbase from '../page/base';\r\nimport Chkcookie from '../service/chkcookie';\r\nimport {Auth_URL} from '../key/key';\r\n\r\nconst { Content } = Layout\r\n\r\nconst Vmessage = {\r\n    required : \"'${name}'을 입력하십시오.\",\r\n}\r\n\r\nexport default class Login extends React.Component{\r\n\r\n    render(){\r\n\r\n        const submit = (values) => {\r\n            Axios.post(Auth_URL,values).then(v => {\r\n                if(v.status === 200){\r\n                    Chkcookie.setuser(v.data.username);\r\n                    Chkcookie.settoken(v.data.token);\r\n                    this.props.history.push(\"/\");\r\n                    window.location.reload();\r\n                }\r\n            });\r\n        }\r\n\r\n        return(\r\n            <Mainbase>\r\n                <Content>\r\n            <div id=\"notfound\" style={{textAlign:'center',justifyContent:'center',display:'flex',alignItems:'center',flexDirection:'column',\r\n                    height:'100vh'}}>\r\n                <div style={{width: \"20%\"}} className=\"form\">\r\n                    <h1 style={{color:'white', marginBottom:50}}> 회원 로그인 </h1>\r\n                    <Form\r\n                            validateMessages={Vmessage}\r\n                            onFinish={submit}\r\n                            labelCol={\r\n                                {\r\n                                    pull:2,\r\n                                    span:50,\r\n                                }\r\n                            }\r\n                    >\r\n                        <Form.Item\r\n                            name=\"user\"\r\n                            rules={[\r\n                                    {\r\n                                        required:true,\r\n                                        message:'아이디를 입력하세요!'\r\n                                    },\r\n                                ]}\r\n                        >\r\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"ID\"/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                    {\r\n                                        required:true,\r\n                                        message:'비밀번호를 입력하세요!'\r\n                                    },\r\n                                ]}\r\n                        >\r\n                            <Input prefix={<LockOutlined className=\"site-form-item-icon\"/>} placeholder=\"Password\" type=\"password\"/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" style={{width:\"100%\",marginTop:\"5%\"}} formMethod=\"post\">\r\n                            로그인\r\n                            </Button>\r\n                            \r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <h1 style={{color:'white'}}>계정이 없다면?</h1>\r\n                            <Link to=\"/register\">\r\n                                <Button type=\"primary\" style={{width:\"100%\"}}>\r\n                                    회원가입\r\n                                </Button>\r\n                            </Link>\r\n                        </Form.Item>\r\n\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n            </Content>\r\n            </Mainbase>\r\n        )\r\n    }\r\n}","C:\\Web\\Gaesipang_test\\Front\\src\\page\\base.jsx",[],"C:\\Web\\Gaesipang_test\\Front\\src\\service\\chkcookie.js",[],"C:\\Web\\Gaesipang_test\\Front\\src\\page\\logout.jsx",[],"C:\\Web\\Gaesipang_test\\Front\\src\\page\\register.jsx",["117"],"C:\\Web\\Gaesipang_test\\Front\\src\\page\\needlogin.jsx",[],["118","119"],"C:\\Web\\Gaesipang_test\\Front\\src\\page\\chkpasswd.jsx",["120"],"import React from 'react';\r\nimport qs from 'query-string';\r\nimport Axios from 'axios';\r\nimport Chk from '../service/chkcookie';\r\nimport { Layout, Form,Input,Button } from 'antd';\r\nimport { LockOutlined } from '@ant-design/icons';\r\nimport Mainbase from './base';\r\nimport { Isuser_URL as URL} from '../key/key';\r\n\r\nconst { Content } = Layout\r\nconst Vmessage = {\r\n    required : \"'${name}'을 입력하십시오.\",\r\n}\r\n\r\nexport default class Chkpasswd extends React.Component{\r\n\r\n    render(){\r\n        const ref = qs.parse(this.props.location.search).ref;\r\n\r\n        const header = {\r\n            'Authorization' : Chk.gettoken(),\r\n        }\r\n        const submit = (values) => {\r\n            Axios.post(URL,values,{\r\n                headers : header,\r\n            }).then(v => {\r\n                if(v.status === 200){\r\n                    this.props.history.push({\r\n                        pathname : \"/\"+ref,\r\n                        state:{\r\n                            is_ok : true,\r\n                            userinfo : {\r\n                                user : v.data.base.user,\r\n                                email : v.data.base.email,\r\n                                age : v.data.base.age,\r\n                            },\r\n                        },\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        return(\r\n            <Mainbase>\r\n                <Content>\r\n            <div id=\"notfound\" style={{textAlign:'center',justifyContent:'center',display:'flex',alignItems:'center',flexDirection:'column',\r\n                    height:'100vh'}}>\r\n                <div style={{width: \"20%\"}} className=\"form\">\r\n                    <h1 style={{color:'white', marginBottom:30}}> 비밀번호 확인 </h1>\r\n                    <h3 style={{color:'white', marginBottom:50}}> 비밀번호를 한번 더 확인합니다. </h3>\r\n                    <Form\r\n                            validateMessages={Vmessage}\r\n                            onFinish={submit}\r\n                            labelCol={\r\n                                {\r\n                                    pull:2,\r\n                                    span:50,\r\n                                }\r\n                            }\r\n                    >\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                    {\r\n                                        required:true,\r\n                                        message:'비밀번호를 입력하세요!'\r\n                                    },\r\n                                ]}\r\n                        >\r\n                            <Input prefix={<LockOutlined className=\"site-form-item-icon\"/>} placeholder=\"Password\" type=\"password\"/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" style={{width:\"100%\",marginTop:\"5%\"}} formMethod=\"post\">\r\n                            확인\r\n                            </Button>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" style={{width:\"100%\",marginTop:\"5%\"}} onClick={this.test}>\r\n                            확인2\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n            </Content>\r\n            </Mainbase>\r\n        )\r\n    }\r\n}","C:\\Web\\Gaesipang_test\\Front\\src\\reportWebVitals.js",[],"C:\\Web\\Gaesipang_test\\Front\\src\\page\\board_modify.jsx",["121","122","123","124","125","126","127"],"import React from 'react'\r\nimport Axios from 'axios';\r\nimport NL from '../page/needlogin';\r\nimport { PageHeader, Descriptions, Form, Input,Button } from 'antd'\r\nimport \"../css/write_css.css\";\r\nimport Mainbase from '../page/base';\r\nimport Chkcookie from '../service/chkcookie';\r\nimport { Modify_URL as URL ,VIEW} from '../key/key';\r\nimport {Board_title,Inboard_Title} from '../style/styled';\r\n\r\nexport default class BoardModify extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isValid : false,\r\n            board : {\r\n\r\n            },\r\n        }    \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({isValid : this.props.history.location.state === undefined ? false : true,\r\n            board : this.props.history.location.state === undefined ? {} : this.props.history.location.state.board,\r\n        })\r\n    }\r\n\r\n    finish = (v) => {\r\n        v= {\r\n            ...v,\r\n            seq : this.state.board.seq,\r\n            author : this.state.board.author,\r\n        }\r\n        Axios.post(URL,v,{\r\n            headers:{\r\n                \"Authorization\" : Chkcookie.gettoken(),\r\n            }\r\n        }).then(r => {\r\n            if(r.status == 200){\r\n                alert(\"수정이 완료되었습니다.\");\r\n                this.props.history.push(VIEW+this.state.board.seq);\r\n                window.location.reload();\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Mainbase>\r\n            {this.state.isValid ?\r\n            <PageHeader\r\n                className=\"page\"\r\n                ghost={false}\r\n                title={\r\n                    <Board_title level={3}>게시글 수정</Board_title>\r\n                }\r\n                style={{\r\n                    justifyContent:'center',display:'flex',alignItems:'center',flexDirection:'column',\r\n                    height:'100vh',\r\n                    paddingLeft:'3%',\r\n                    color:\"white\",\r\n                    backgroundColor:\"#001529\",\r\n                }}\r\n            >\r\n                <Descriptions size=\"default\">\r\n                    <Descriptions.Item>\r\n                        <Form\r\n                            validateMessages={{\r\n                                required:'${label}을 입력하세요!'\r\n                            }}\r\n                            onFinish={this.finish}\r\n                            initialValues={{\r\n                                ['title'] : this.state.board.title,\r\n                                ['content'] : this.state.board.content,\r\n                            }}\r\n                            >\r\n                            <Inboard_Title\r\n                                name={['title']}\r\n                                label=\"제목\"\r\n                                \r\n                                rules={[\r\n                                    {\r\n                                        required:true,\r\n\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input style={{width:\"40vw\"}} />\r\n                            </Inboard_Title>\r\n                            <Inboard_Title\r\n                                name={['content']}\r\n                                label=\"내용\"\r\n                                rules={[\r\n                                    {\r\n                                        required:true,\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input.TextArea style={{width:\"85vw\",background:\"white\"}} autoSize={{minRows:20,maxRows:20}}/>\r\n                            </Inboard_Title>\r\n                            <Form.Item\r\n                                wrapperCol={{span:30,offset:11}}\r\n                            >\r\n                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                    수정\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Descriptions.Item>\r\n                </Descriptions>\r\n            </PageHeader>\r\n            : <NL></NL> }\r\n            </Mainbase>\r\n        )\r\n    }\r\n}","C:\\Web\\Gaesipang_test\\Front\\src\\style\\styled.js",["128","129"],"C:\\Web\\Gaesipang_test\\Front\\src\\page\\board.jsx",["130"],"import React from 'react'\r\nimport { Table, PageHeader, Button, Descriptions } from 'antd'\r\nimport \"../css/first_css.css\";\r\nimport { Link } from 'react-router-dom';\r\nimport NL from './needlogin';\r\nimport Axios from 'axios';\r\nimport Chkcookie from '../service/chkcookie';\r\nimport Mainbase from './base';\r\nimport { Board_title } from '../style/styled';\r\nimport { Boardlist_URL as URL ,VIEW} from '../key/key';\r\n\r\nconst columns = [\r\n    {\r\n      title: '글번호',\r\n      dataIndex: 'seq',\r\n      key : 'seq'\r\n    },\r\n    {\r\n      title: '제목',\r\n      dataIndex: 'title',\r\n      render : (title,data) => <Link to={VIEW+data.seq}>{title}</Link>,\r\n      key: 'title',\r\n    },\r\n    {\r\n      title: '조회수',\r\n      dataIndex: 'readcount',\r\n      key: 'readcount',\r\n    },\r\n    {\r\n        title: '작성자',\r\n        dataIndex: 'author',\r\n        key: 'author',\r\n    },\r\n  ];\r\n\r\nexport default class Board extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            is_login : Chkcookie.islogin() ? true : false,\r\n            dataSource : [],\r\n            totalcount : 0,\r\n            currentpage : 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.init_list();\r\n    }\r\n\r\n    gather_data = (value) => {\r\n        return Axios.get(URL+(value-1),{\r\n            headers:{\r\n                'Authorization' : Chkcookie.gettoken(),\r\n            },\r\n        });\r\n    }\r\n\r\n    init_list = () => {\r\n        if(Chkcookie.islogin()){\r\n            const res = this.gather_data(1);\r\n            res.then(v => {\r\n                this.setState({dataSource : v.data.base.content, totalcount : v.data.base.totalElements});\r\n                Chkcookie.settoken(v.data.token);\r\n            }).catch(e => {\r\n                alert(\"세션이 만료되었습니다. 다시 로그인 하세요\");\r\n                Chkcookie.logout();\r\n                this.props.history.push(\"/\");\r\n                window.location.reload();\r\n            })\r\n        }\r\n    }\r\n\r\n    update_list = (value) => {\r\n        const res = this.gather_data(value);\r\n        res.then(v => {\r\n            this.setState({dataSource : v.data.base.content, totalcount : v.data.base.totalElements});\r\n            Chkcookie.settoken(v.data.token);\r\n        }).catch(e => {\r\n            alert(\"세션이 만료되었습니다. 다시 로그인 하세요\");\r\n            Chkcookie.logout();\r\n            this.props.history.push(\"/\");\r\n            window.location.reload();\r\n        })\r\n    }\r\n    \r\n    next(path){\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Mainbase>\r\n                {this.state.is_login ?\r\n                (\r\n                    <PageHeader\r\n                        className=\"page\"\r\n                        ghost={false}\r\n                        title={\r\n                            <Board_title level={3}>게시판</Board_title>\r\n                        }\r\n                        extra={[\r\n\r\n                            <Button key=\"1\" style={{float:\"right\"}} type=\"primary\" onClick={() => this.next('/write')}>\r\n                                글쓰기\r\n                            </Button>\r\n                        ]}\r\n                        style={{\r\n                            textAlign:'center',display:'flex',alignItems:'center',flexDirection:'column',paddingTop:\"8%\",\r\n                    height:'100vh',\r\n                            color:\"white\",\r\n                            backgroundColor:\"#001529\",\r\n                        }}\r\n                    >\r\n                        <Descriptions size=\"default\">\r\n                            <Descriptions.Item>\r\n                                <Table columns={columns} dataSource={this.state.dataSource} pagination={{\r\n                                    position:['bottomCenter'],\r\n                                    total:this.state.totalcount,\r\n                                    onChange:this.update_list,\r\n                                    }}/>\r\n                            </Descriptions.Item>\r\n                        </Descriptions>\r\n                    </PageHeader>\r\n                )\r\n                : <NL ment=\"로그인을 하셔야합니다!\"></NL>}\r\n                </Mainbase>\r\n        )\r\n    }\r\n}","C:\\Web\\Gaesipang_test\\Front\\src\\page\\modifyinfo.jsx",["131","132","133","134","135","136","137","138"],"import React from 'react';\r\nimport Axios from 'axios';\r\nimport Chkcookie from '../service/chkcookie'\r\nimport { Layout, Form,Input,Button,Tooltip } from 'antd';\r\nimport { UserOutlined, LockOutlined,InfoCircleOutlined,MailOutlined } from '@ant-design/icons';\r\nimport Mainbase from './base';\r\nimport {Userupdate_URL} from '../key/key';\r\n\r\nconst { Content } = Layout\r\n\r\nconst Vmessage = {\r\n    required : \"'${name}'을 입력하십시오.\",\r\n}\r\n\r\nexport default class Second extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            is_ok : this.props.location.state === undefined ? false : this.props.location.state.is_ok,\r\n            userinfo : {\r\n                user : this.props.location.state != undefined ? this.props.location.state.userinfo.user : \"\",\r\n                email : this.props.location.state != undefined ? this.props.location.state.userinfo.email : \"\",\r\n                age : this.props.location.state != undefined ? this.props.location.state.userinfo.age : \"\",\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const submit = (values) => {\r\n            console.log(values);\r\n            Axios.post(Userupdate_URL,values,{\r\n                headers:{\r\n                    'Authorization' : Chkcookie.gettoken(),\r\n                }\r\n            }).then(v => {\r\n                if(v.status == 200){\r\n                    alert(\"회원 정보 변경이 완료되었습니다!\\n메인화면으로 이동합니다.\");\r\n                    this.props.history.push(\"/\");\r\n                }\r\n            });\r\n        }\r\n\r\n        return(\r\n            <Mainbase>\r\n                <Content>\r\n                    <div id=\"notfound\" style={{textAlign:'center',justifyContent:'center',display:'flex',alignItems:'center',flexDirection:'column',\r\n                            height:'100vh'}}>\r\n                        <div style={{width: \"30%\"}} className=\"form\">\r\n                            {this.state.is_ok ?\r\n                                <div>\r\n                                    <h1 style={{color:'white', marginBottom:50}}> 회원 정보 수정 </h1>\r\n                                    <Form\r\n                                            initialValues={{\r\n                                                ['user'] : this.state.userinfo.user,\r\n                                                ['email'] : this.state.userinfo.email,\r\n                                                ['age'] : this.state.userinfo.age,\r\n                                            }}\r\n                                            \r\n                                            validateMessages={Vmessage}\r\n                                            onFinish={submit}\r\n                                            labelCol={\r\n                                                {\r\n                                                    pull:2,\r\n                                                    span:50,\r\n                                                }\r\n                                            }\r\n                                    >\r\n                                        <Form.Item\r\n                                            name=\"user\"\r\n\r\n                                            rules={[\r\n                                                    {\r\n                                                        required:true,\r\n                                                        message:'아이디를 입력하세요!'\r\n                                                    },\r\n                                                ]}\r\n                                        >\r\n                                            <Input disabled prefix={<UserOutlined className=\"site-form-item-icon\"/>}/>\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item\r\n                                            name=\"password\"\r\n                                        >\r\n                                            <Input prefix={<LockOutlined className=\"site-form-item-icon\"/>}\r\n                                            placeholder=\"비밀번호 변경시 입력하세요\"\r\n                                            type=\"password\"\r\n                                            suffix={\r\n                                                <Tooltip color='#87d068' placement=\"right\" title=\"비밀번호는 안전하게!\" overlayStyle={{paddingLeft:'1%'}}>\r\n                                                    <InfoCircleOutlined style={{color:'rgba(0,0,0,.45)'}}/>\r\n                                                </Tooltip>\r\n                                            }\r\n                                            />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item\r\n                                            name=\"password2\"\r\n                                        >\r\n                                            <Input prefix={<LockOutlined className=\"site-form-item-icon\"/>}\r\n                                            placeholder=\"비밀번호를 한번 더 입력하세요 (변경시)\"\r\n                                            type=\"password\"\r\n                                            suffix={\r\n                                                <Tooltip color='#87d068' placement=\"right\" title=\"비밀번호는 안전하게!\" overlayStyle={{paddingLeft:'1%'}}>\r\n                                                    <InfoCircleOutlined style={{color:'rgba(0,0,0,.45)'}}/>\r\n                                                </Tooltip>\r\n                                            }\r\n                                            />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item\r\n                                            name=\"email\"\r\n                                            rules={[\r\n                                                    {\r\n                                                        required:true,\r\n                                                        message:'이메일을 입력하세요!'\r\n                                                    },\r\n                                                ]}\r\n                                        >\r\n                                            <Input prefix={<MailOutlined className=\"site-form-item-icon\"/>}\r\n                                            type=\"email\"\r\n                                            />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item\r\n                                            name=\"age\"\r\n                                            rules={[\r\n                                                    {\r\n                                                        required:true,\r\n                                                        message:'나이를 입력하세요!'\r\n                                                    },\r\n                                                ]}\r\n                                        >\r\n                                            <Input prefix={<InfoCircleOutlined className=\"site-form-item-icon\"/>}\r\n                                            placeholder=\"Age\"\r\n                                            type='number'\r\n                                            />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item>\r\n                                            <Button type=\"primary\" htmlType=\"submit\" style={{width:\"100%\",marginTop:\"10%\"}} formMethod=\"post\">\r\n                                                수정완료\r\n                                            </Button>\r\n                                            \r\n                                        </Form.Item>\r\n\r\n                                    </Form>\r\n                                </div>\r\n                                :<div><h1 style={{color:'white', marginBottom:50}}> 잘못된 접근입니다. </h1></div>}\r\n                        </div>\r\n                    </div>\r\n                </Content>\r\n            </Mainbase>\r\n        )\r\n    }\r\n}",{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":8,"column":8,"nodeType":"145","messageId":"146","endLine":8,"endColumn":18},{"ruleId":"143","severity":1,"message":"147","line":9,"column":8,"nodeType":"145","messageId":"146","endLine":9,"endColumn":18},{"ruleId":"143","severity":1,"message":"148","line":12,"column":10,"nodeType":"145","messageId":"146","endLine":12,"endColumn":25},{"ruleId":"143","severity":1,"message":"149","line":13,"column":8,"nodeType":"145","messageId":"146","endLine":13,"endColumn":14},{"ruleId":"150","severity":1,"message":"151","line":68,"column":21,"nodeType":"152","endLine":68,"endColumn":44},{"ruleId":"153","severity":1,"message":"154","line":90,"column":61,"nodeType":"155","messageId":"156","endLine":90,"endColumn":63},{"ruleId":"153","severity":1,"message":"154","line":91,"column":79,"nodeType":"155","messageId":"156","endLine":91,"endColumn":81},{"ruleId":"153","severity":1,"message":"154","line":96,"column":61,"nodeType":"155","messageId":"156","endLine":96,"endColumn":63},{"ruleId":"153","severity":1,"message":"154","line":97,"column":79,"nodeType":"155","messageId":"156","endLine":97,"endColumn":81},{"ruleId":"139","replacedBy":"157"},{"ruleId":"141","replacedBy":"158"},{"ruleId":"150","severity":1,"message":"151","line":40,"column":21,"nodeType":"152","endLine":40,"endColumn":44},{"ruleId":"159","severity":1,"message":"160","line":54,"column":42,"nodeType":"161","messageId":"162","endLine":54,"endColumn":60},{"ruleId":"150","severity":1,"message":"163","line":58,"column":29,"nodeType":"152","endLine":67,"endColumn":30},{"ruleId":"159","severity":1,"message":"160","line":13,"column":16,"nodeType":"161","messageId":"162","endLine":13,"endColumn":36},{"ruleId":"159","severity":1,"message":"160","line":11,"column":16,"nodeType":"161","messageId":"162","endLine":11,"endColumn":36},{"ruleId":"139","replacedBy":"164"},{"ruleId":"141","replacedBy":"165"},{"ruleId":"159","severity":1,"message":"160","line":12,"column":16,"nodeType":"161","messageId":"162","endLine":12,"endColumn":36},{"ruleId":"153","severity":1,"message":"154","line":40,"column":25,"nodeType":"155","messageId":"156","endLine":40,"endColumn":27},{"ruleId":"150","severity":1,"message":"151","line":56,"column":21,"nodeType":"152","endLine":56,"endColumn":44},{"ruleId":"159","severity":1,"message":"160","line":70,"column":42,"nodeType":"161","messageId":"162","endLine":70,"endColumn":60},{"ruleId":"166","severity":1,"message":"167","line":74,"column":33,"nodeType":"168","messageId":"169","endLine":74,"endColumn":67,"fix":"170"},{"ruleId":"166","severity":1,"message":"171","line":75,"column":33,"nodeType":"168","messageId":"169","endLine":75,"endColumn":71,"fix":"172"},{"ruleId":"150","severity":1,"message":"163","line":78,"column":29,"nodeType":"152","endLine":88,"endColumn":30},{"ruleId":"150","severity":1,"message":"163","line":91,"column":29,"nodeType":"152","endLine":99,"endColumn":30},{"ruleId":"143","severity":1,"message":"173","line":38,"column":7,"nodeType":"145","messageId":"146","endLine":38,"endColumn":11},{"ruleId":"143","severity":1,"message":"174","line":55,"column":7,"nodeType":"145","messageId":"146","endLine":55,"endColumn":14},{"ruleId":"150","severity":1,"message":"151","line":101,"column":29,"nodeType":"152","endLine":101,"endColumn":52},{"ruleId":"159","severity":1,"message":"160","line":12,"column":16,"nodeType":"161","messageId":"162","endLine":12,"endColumn":36},{"ruleId":"153","severity":1,"message":"175","line":22,"column":50,"nodeType":"155","messageId":"156","endLine":22,"endColumn":52},{"ruleId":"153","severity":1,"message":"175","line":23,"column":51,"nodeType":"155","messageId":"156","endLine":23,"endColumn":53},{"ruleId":"153","severity":1,"message":"175","line":24,"column":49,"nodeType":"155","messageId":"156","endLine":24,"endColumn":51},{"ruleId":"153","severity":1,"message":"154","line":37,"column":29,"nodeType":"155","messageId":"156","endLine":37,"endColumn":31},{"ruleId":"166","severity":1,"message":"176","line":55,"column":49,"nodeType":"168","messageId":"169","endLine":55,"endColumn":84,"fix":"177"},{"ruleId":"166","severity":1,"message":"178","line":56,"column":49,"nodeType":"168","messageId":"169","endLine":56,"endColumn":86,"fix":"179"},{"ruleId":"166","severity":1,"message":"180","line":57,"column":49,"nodeType":"168","messageId":"169","endLine":57,"endColumn":82,"fix":"181"},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'Headerfile' is defined but never used.","Identifier","unusedVar","'Bottomfile' is defined but never used.","'CookiesProvider' is defined but never used.","'styled' is defined but never used.","react/jsx-pascal-case","Imported JSX component Board_title must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["182"],["183"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","Imported JSX component Inboard_Title must be in PascalCase or SCREAMING_SNAKE_CASE",["182"],["183"],"no-useless-computed-key","Unnecessarily computed property ['title'] found.","Property","unnecessarilyComputedProperty",{"range":"184","text":"185"},"Unnecessarily computed property ['content'] found.",{"range":"186","text":"187"},"'Base' is assigned a value but never used.","'Content' is assigned a value but never used.","Expected '!==' and instead saw '!='.","Unnecessarily computed property ['user'] found.",{"range":"188","text":"189"},"Unnecessarily computed property ['email'] found.",{"range":"190","text":"191"},"Unnecessarily computed property ['age'] found.",{"range":"192","text":"193"},"no-global-assign","no-unsafe-negation",[2412,2421],"'title'",[2481,2492],"'content'",[2203,2211],"'user'",[2289,2298],"'email'",[2377,2384],"'age'"]